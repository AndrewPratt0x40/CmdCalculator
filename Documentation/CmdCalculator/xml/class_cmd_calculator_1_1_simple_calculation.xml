<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_cmd_calculator_1_1_simple_calculation" kind="class" language="C++" prot="public">
    <compoundname>CmdCalculator::SimpleCalculation</compoundname>
    <basecompoundref refid="struct_cmd_calculator_1_1_calculation___intended_satisfaction" prot="public" virt="non-virtual">CmdCalculator::Calculation_IntendedSatisfaction</basecompoundref>
    <includes refid="_simple_calculation_8h" local="no">SimpleCalculation.h</includes>
    <templateparamlist>
      <param>
        <type>String</type>
        <declname>InputExpressionT</declname>
        <defname>InputExpressionT</defname>
      </param>
      <param>
        <type>StringToMathAstConverter</type>
        <declname>StringToMathAstConverterT</declname>
        <defname>StringToMathAstConverterT</defname>
      </param>
      <param>
        <type>MathAstToExpressionConverter</type>
        <declname>MathAstToExpressionConverterT</declname>
        <defname>MathAstToExpressionConverterT</defname>
      </param>
      <param>
        <type>ExpressionToStringConverter</type>
        <declname>ExpressionToStringConverterT</declname>
        <defname>ExpressionToStringConverterT</defname>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_cmd_calculator_1_1_simple_calculation_1a148e178be837b1cd87189367869e717e" prot="public" static="no">
        <type>InputExpressionT</type>
        <definition>using CmdCalculator::SimpleCalculation&lt; InputExpressionT, StringToMathAstConverterT, MathAstToExpressionConverterT, ExpressionToStringConverterT &gt;::InputExpressionType =  InputExpressionT</definition>
        <argsstring></argsstring>
        <name>InputExpressionType</name>
        <qualifiedname>CmdCalculator::SimpleCalculation::InputExpressionType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SimpleCalculation.h" line="33" column="1" bodyfile="SimpleCalculation.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_cmd_calculator_1_1_simple_calculation_1a33e8f8c83cd14af4379b61afce4f35f9" prot="public" static="no">
        <type>StringToMathAstConverterT</type>
        <definition>using CmdCalculator::SimpleCalculation&lt; InputExpressionT, StringToMathAstConverterT, MathAstToExpressionConverterT, ExpressionToStringConverterT &gt;::StringToMathAstConverterType =  StringToMathAstConverterT</definition>
        <argsstring></argsstring>
        <name>StringToMathAstConverterType</name>
        <qualifiedname>CmdCalculator::SimpleCalculation::StringToMathAstConverterType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SimpleCalculation.h" line="34" column="1" bodyfile="SimpleCalculation.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_cmd_calculator_1_1_simple_calculation_1af22e405837f605b73c67dac038e1b8fa" prot="public" static="no">
        <type>MathAstToExpressionConverterT</type>
        <definition>using CmdCalculator::SimpleCalculation&lt; InputExpressionT, StringToMathAstConverterT, MathAstToExpressionConverterT, ExpressionToStringConverterT &gt;::MathAstToExpressionConverterType =  MathAstToExpressionConverterT</definition>
        <argsstring></argsstring>
        <name>MathAstToExpressionConverterType</name>
        <qualifiedname>CmdCalculator::SimpleCalculation::MathAstToExpressionConverterType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SimpleCalculation.h" line="35" column="1" bodyfile="SimpleCalculation.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_cmd_calculator_1_1_simple_calculation_1ac46409178d56abd2d331fbbd96320d96" prot="public" static="no">
        <type>ExpressionToStringConverterT</type>
        <definition>using CmdCalculator::SimpleCalculation&lt; InputExpressionT, StringToMathAstConverterT, MathAstToExpressionConverterT, ExpressionToStringConverterT &gt;::ExpressionToStringConverterType =  ExpressionToStringConverterT</definition>
        <argsstring></argsstring>
        <name>ExpressionToStringConverterType</name>
        <qualifiedname>CmdCalculator::SimpleCalculation::ExpressionToStringConverterType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SimpleCalculation.h" line="36" column="1" bodyfile="SimpleCalculation.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_cmd_calculator_1_1_simple_calculation_1a75933a780497527784ee001b0a375515" prot="public" static="no">
        <type>decltype(std::declval&lt; <ref refid="class_cmd_calculator_1_1_simple_calculation_1ac46409178d56abd2d331fbbd96320d96" kindref="member">ExpressionToStringConverterType</ref> &gt;() .stringifyExpression(std::declval&lt; typename ExpressionToStringConverterType::ExpressionType &gt;(), std::declval&lt; <ref refid="class_cmd_calculator_1_1_calculation_configuration" kindref="compound">CalculationConfiguration</ref> &gt;()))</type>
        <definition>using CmdCalculator::SimpleCalculation&lt; InputExpressionT, StringToMathAstConverterT, MathAstToExpressionConverterT, ExpressionToStringConverterT &gt;::OutputExpressionType =  decltype ( std::declval&lt;ExpressionToStringConverterType&gt;() .stringifyExpression ( std::declval&lt;typename ExpressionToStringConverterType::ExpressionType&gt;(), std::declval&lt;CalculationConfiguration&gt;() ) )</definition>
        <argsstring></argsstring>
        <name>OutputExpressionType</name>
        <qualifiedname>CmdCalculator::SimpleCalculation::OutputExpressionType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SimpleCalculation.h" line="38" column="1" bodyfile="SimpleCalculation.h" bodystart="48" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_cmd_calculator_1_1_simple_calculation_1a831c3fce4c27b73bf6b5f44bd767ecda" prot="private" static="no" mutable="no">
        <type>const <ref refid="class_cmd_calculator_1_1_simple_calculation_1a148e178be837b1cd87189367869e717e" kindref="member">InputExpressionType</ref></type>
        <definition>const InputExpressionType CmdCalculator::SimpleCalculation&lt; InputExpressionT, StringToMathAstConverterT, MathAstToExpressionConverterT, ExpressionToStringConverterT &gt;::m_inputExpression</definition>
        <argsstring></argsstring>
        <name>m_inputExpression</name>
        <qualifiedname>CmdCalculator::SimpleCalculation::m_inputExpression</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SimpleCalculation.h" line="52" column="27" bodyfile="SimpleCalculation.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_cmd_calculator_1_1_simple_calculation_1aeabdda5de82c34c4d260977d91a20d5e" prot="private" static="no" mutable="no">
        <type>const <ref refid="class_cmd_calculator_1_1_calculation_configuration" kindref="compound">CalculationConfiguration</ref></type>
        <definition>const CalculationConfiguration CmdCalculator::SimpleCalculation&lt; InputExpressionT, StringToMathAstConverterT, MathAstToExpressionConverterT, ExpressionToStringConverterT &gt;::m_configuration</definition>
        <argsstring></argsstring>
        <name>m_configuration</name>
        <qualifiedname>CmdCalculator::SimpleCalculation::m_configuration</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SimpleCalculation.h" line="53" column="32" bodyfile="SimpleCalculation.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_cmd_calculator_1_1_simple_calculation_1abfa843c0c807ff54c56e2caa0e356c74" prot="private" static="no" mutable="no">
        <type><ref refid="class_cmd_calculator_1_1_simple_calculation_1a33e8f8c83cd14af4379b61afce4f35f9" kindref="member">StringToMathAstConverterType</ref></type>
        <definition>StringToMathAstConverterType CmdCalculator::SimpleCalculation&lt; InputExpressionT, StringToMathAstConverterT, MathAstToExpressionConverterT, ExpressionToStringConverterT &gt;::m_stringToMathAstConverter</definition>
        <argsstring></argsstring>
        <name>m_stringToMathAstConverter</name>
        <qualifiedname>CmdCalculator::SimpleCalculation::m_stringToMathAstConverter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SimpleCalculation.h" line="54" column="30" bodyfile="SimpleCalculation.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_cmd_calculator_1_1_simple_calculation_1a4533ad84feef07f957219d97b3338e95" prot="private" static="no" mutable="no">
        <type><ref refid="class_cmd_calculator_1_1_simple_calculation_1af22e405837f605b73c67dac038e1b8fa" kindref="member">MathAstToExpressionConverterType</ref></type>
        <definition>MathAstToExpressionConverterType CmdCalculator::SimpleCalculation&lt; InputExpressionT, StringToMathAstConverterT, MathAstToExpressionConverterT, ExpressionToStringConverterT &gt;::m_mathAstToExpressionConverter</definition>
        <argsstring></argsstring>
        <name>m_mathAstToExpressionConverter</name>
        <qualifiedname>CmdCalculator::SimpleCalculation::m_mathAstToExpressionConverter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SimpleCalculation.h" line="55" column="34" bodyfile="SimpleCalculation.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_cmd_calculator_1_1_simple_calculation_1a2dd10204077a516dc215f8f724d3194b" prot="private" static="no" mutable="no">
        <type><ref refid="class_cmd_calculator_1_1_simple_calculation_1ac46409178d56abd2d331fbbd96320d96" kindref="member">ExpressionToStringConverterType</ref></type>
        <definition>ExpressionToStringConverterType CmdCalculator::SimpleCalculation&lt; InputExpressionT, StringToMathAstConverterT, MathAstToExpressionConverterT, ExpressionToStringConverterT &gt;::m_expressionToStringConverter</definition>
        <argsstring></argsstring>
        <name>m_expressionToStringConverter</name>
        <qualifiedname>CmdCalculator::SimpleCalculation::m_expressionToStringConverter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SimpleCalculation.h" line="56" column="33" bodyfile="SimpleCalculation.h" bodystart="56" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_cmd_calculator_1_1_simple_calculation_1aca8613d2cddff442f77f79badd099540" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_cmd_calculator_1_1_simple_calculation_1a148e178be837b1cd87189367869e717e" kindref="member">InputExpressionType</ref></type>
        <definition>InputExpressionType CmdCalculator::SimpleCalculation&lt; InputExpressionT, StringToMathAstConverterT, MathAstToExpressionConverterT, ExpressionToStringConverterT &gt;::getInputExpression</definition>
        <argsstring>() const</argsstring>
        <name>getInputExpression</name>
        <qualifiedname>CmdCalculator::SimpleCalculation::getInputExpression</qualifiedname>
        <briefdescription>
<para>Accessor to the expression to be calculated. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The expression to be calculated represented as a string. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SimpleCalculation.h" line="63" column="21" bodyfile="SimpleCalculation.h" bodystart="63" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="class_cmd_calculator_1_1_simple_calculation_1ad2f44edcf633ed3cdb5734effcec09c0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_cmd_calculator_1_1_simple_calculation_1a75933a780497527784ee001b0a375515" kindref="member">OutputExpressionType</ref></type>
        <definition>OutputExpressionType CmdCalculator::SimpleCalculation&lt; InputExpressionT, StringToMathAstConverterT, MathAstToExpressionConverterT, ExpressionToStringConverterT &gt;::getOutputExpression</definition>
        <argsstring>() const</argsstring>
        <name>getOutputExpression</name>
        <qualifiedname>CmdCalculator::SimpleCalculation::getOutputExpression</qualifiedname>
        <briefdescription>
<para>Accessor to the calculated expression. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The calculated expression as a string. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SimpleCalculation.h" line="71" column="22" bodyfile="SimpleCalculation.h" bodystart="71" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="class_cmd_calculator_1_1_simple_calculation_1ac6b0e6de40df011ba40c9b3764bfc35e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_cmd_calculator_1_1_calculation_configuration" kindref="compound">CalculationConfiguration</ref></type>
        <definition>CalculationConfiguration CmdCalculator::SimpleCalculation&lt; InputExpressionT, StringToMathAstConverterT, MathAstToExpressionConverterT, ExpressionToStringConverterT &gt;::getConfiguration</definition>
        <argsstring>() const</argsstring>
        <name>getConfiguration</name>
        <qualifiedname>CmdCalculator::SimpleCalculation::getConfiguration</qualifiedname>
        <briefdescription>
<para>Accessor to the calculation configuration object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The calculation configuration object to use. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SimpleCalculation.h" line="86" column="26" bodyfile="SimpleCalculation.h" bodystart="86" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="class_cmd_calculator_1_1_simple_calculation_1ae453bf4550e1328454ccec15845f57a1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_cmd_calculator_1_1_simple_calculation_1a33e8f8c83cd14af4379b61afce4f35f9" kindref="member">StringToMathAstConverterType</ref></type>
        <definition>StringToMathAstConverterType CmdCalculator::SimpleCalculation&lt; InputExpressionT, StringToMathAstConverterT, MathAstToExpressionConverterT, ExpressionToStringConverterT &gt;::getStringToMathAstConverter</definition>
        <argsstring>() const</argsstring>
        <name>getStringToMathAstConverter</name>
        <qualifiedname>CmdCalculator::SimpleCalculation::getStringToMathAstConverter</qualifiedname>
        <briefdescription>
<para>Accessor to the object responsible for converting strings to mathematical abstract syntax trees. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The converter object to use. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SimpleCalculation.h" line="94" column="30" bodyfile="SimpleCalculation.h" bodystart="94" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="class_cmd_calculator_1_1_simple_calculation_1ae47ca88c9894dc1ada62c82e0dee9442" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_cmd_calculator_1_1_simple_calculation_1af22e405837f605b73c67dac038e1b8fa" kindref="member">MathAstToExpressionConverterType</ref></type>
        <definition>MathAstToExpressionConverterType CmdCalculator::SimpleCalculation&lt; InputExpressionT, StringToMathAstConverterT, MathAstToExpressionConverterT, ExpressionToStringConverterT &gt;::getMathAstToExpressionConverter</definition>
        <argsstring>() const</argsstring>
        <name>getMathAstToExpressionConverter</name>
        <qualifiedname>CmdCalculator::SimpleCalculation::getMathAstToExpressionConverter</qualifiedname>
        <briefdescription>
<para>Accessor to the object responsible for converting mathematical abstract syntax trees to expression objects. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The converter object to use. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SimpleCalculation.h" line="102" column="34" bodyfile="SimpleCalculation.h" bodystart="102" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="class_cmd_calculator_1_1_simple_calculation_1a0bbaf3db1699f597eac61bf6cf9c428d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_cmd_calculator_1_1_simple_calculation_1ac46409178d56abd2d331fbbd96320d96" kindref="member">ExpressionToStringConverterType</ref></type>
        <definition>ExpressionToStringConverterType CmdCalculator::SimpleCalculation&lt; InputExpressionT, StringToMathAstConverterT, MathAstToExpressionConverterT, ExpressionToStringConverterT &gt;::getExpressionToStringConverter</definition>
        <argsstring>() const</argsstring>
        <name>getExpressionToStringConverter</name>
        <qualifiedname>CmdCalculator::SimpleCalculation::getExpressionToStringConverter</qualifiedname>
        <briefdescription>
<para>Accessor to the object responsible for converting expression objects to strings. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The converter object to use. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SimpleCalculation.h" line="110" column="33" bodyfile="SimpleCalculation.h" bodystart="110" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="class_cmd_calculator_1_1_simple_calculation_1a17f2a7de86aa27d4428249864bb3cba0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CmdCalculator::SimpleCalculation&lt; InputExpressionT, StringToMathAstConverterT, MathAstToExpressionConverterT, ExpressionToStringConverterT &gt;::SimpleCalculation</definition>
        <argsstring>(InputExpressionType inputExpression, CalculationConfiguration calculationConfiguration, StringToMathAstConverterType stringToMathAstConverter, MathAstToExpressionConverterType mathAstToExpressionConverter, ExpressionToStringConverterType expressionToStringConverter)</argsstring>
        <name>SimpleCalculation</name>
        <qualifiedname>CmdCalculator::SimpleCalculation::SimpleCalculation</qualifiedname>
        <param>
          <type><ref refid="class_cmd_calculator_1_1_simple_calculation_1a148e178be837b1cd87189367869e717e" kindref="member">InputExpressionType</ref></type>
          <declname>inputExpression</declname>
        </param>
        <param>
          <type><ref refid="class_cmd_calculator_1_1_calculation_configuration" kindref="compound">CalculationConfiguration</ref></type>
          <declname>calculationConfiguration</declname>
        </param>
        <param>
          <type><ref refid="class_cmd_calculator_1_1_simple_calculation_1a33e8f8c83cd14af4379b61afce4f35f9" kindref="member">StringToMathAstConverterType</ref></type>
          <declname>stringToMathAstConverter</declname>
        </param>
        <param>
          <type><ref refid="class_cmd_calculator_1_1_simple_calculation_1af22e405837f605b73c67dac038e1b8fa" kindref="member">MathAstToExpressionConverterType</ref></type>
          <declname>mathAstToExpressionConverter</declname>
        </param>
        <param>
          <type><ref refid="class_cmd_calculator_1_1_simple_calculation_1ac46409178d56abd2d331fbbd96320d96" kindref="member">ExpressionToStringConverterType</ref></type>
          <declname>expressionToStringConverter</declname>
        </param>
        <briefdescription>
<para>Creates a new instance of the <ref refid="class_cmd_calculator_1_1_simple_calculation" kindref="compound">SimpleCalculation</ref> class. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputExpression</parametername>
</parameternamelist>
<parameterdescription>
<para>The expression to be calculated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>calculationConfiguration</parametername>
</parameternamelist>
<parameterdescription>
<para>The calculation configuration object to use. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stringToMathAstConverter</parametername>
</parameternamelist>
<parameterdescription>
<para>The object to use for converting strings to mathematical abstract syntax trees. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mathAstToExpressionConverter</parametername>
</parameternamelist>
<parameterdescription>
<para>The object to use for converting mathematical abstract syntax trees to expression objects. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>expressionToStringConverter</parametername>
</parameternamelist>
<parameterdescription>
<para>The object to use for converting expression objects to strings. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SimpleCalculation.h" line="122" column="1" bodyfile="SimpleCalculation.h" bodystart="123" bodyend="135"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>A simple implementation that satisfies the Calculation concept. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>InputExpressionT</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the expression to be calculated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>StringToMathAstConverter</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the object to convert the string representation of the expression to be calculated into a mathematical abstract syntax tree. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>MathAstToExpressionConverter</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the object to convert the mathematical abstract syntax tree representation of the expression to be calculated into an expression object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ExpressionToStringConverter</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the object to convert the expression object to be calculated into a string. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>CmdCalculator::Calculation_IntendedSatisfaction</label>
        <link refid="struct_cmd_calculator_1_1_calculation___intended_satisfaction"/>
      </node>
      <node id="1">
        <label>CmdCalculator::SimpleCalculation&lt; InputExpressionT, StringToMathAstConverterT, MathAstToExpressionConverterT, ExpressionToStringConverterT &gt;</label>
        <link refid="class_cmd_calculator_1_1_simple_calculation"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>CmdCalculator::Calculation_IntendedSatisfaction</label>
        <link refid="struct_cmd_calculator_1_1_calculation___intended_satisfaction"/>
      </node>
      <node id="1">
        <label>CmdCalculator::SimpleCalculation&lt; InputExpressionT, StringToMathAstConverterT, MathAstToExpressionConverterT, ExpressionToStringConverterT &gt;</label>
        <link refid="class_cmd_calculator_1_1_simple_calculation"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="SimpleCalculation.h" line="28" column="1" bodyfile="SimpleCalculation.h" bodystart="30" bodyend="136"/>
    <listofallmembers>
      <member refid="class_cmd_calculator_1_1_simple_calculation_1ac46409178d56abd2d331fbbd96320d96" prot="public" virt="non-virtual"><scope>CmdCalculator::SimpleCalculation</scope><name>ExpressionToStringConverterType</name></member>
      <member refid="class_cmd_calculator_1_1_simple_calculation_1ac6b0e6de40df011ba40c9b3764bfc35e" prot="public" virt="non-virtual"><scope>CmdCalculator::SimpleCalculation</scope><name>getConfiguration</name></member>
      <member refid="class_cmd_calculator_1_1_simple_calculation_1a0bbaf3db1699f597eac61bf6cf9c428d" prot="public" virt="non-virtual"><scope>CmdCalculator::SimpleCalculation</scope><name>getExpressionToStringConverter</name></member>
      <member refid="class_cmd_calculator_1_1_simple_calculation_1aca8613d2cddff442f77f79badd099540" prot="public" virt="non-virtual"><scope>CmdCalculator::SimpleCalculation</scope><name>getInputExpression</name></member>
      <member refid="class_cmd_calculator_1_1_simple_calculation_1ae47ca88c9894dc1ada62c82e0dee9442" prot="public" virt="non-virtual"><scope>CmdCalculator::SimpleCalculation</scope><name>getMathAstToExpressionConverter</name></member>
      <member refid="class_cmd_calculator_1_1_simple_calculation_1ad2f44edcf633ed3cdb5734effcec09c0" prot="public" virt="non-virtual"><scope>CmdCalculator::SimpleCalculation</scope><name>getOutputExpression</name></member>
      <member refid="class_cmd_calculator_1_1_simple_calculation_1ae453bf4550e1328454ccec15845f57a1" prot="public" virt="non-virtual"><scope>CmdCalculator::SimpleCalculation</scope><name>getStringToMathAstConverter</name></member>
      <member refid="class_cmd_calculator_1_1_simple_calculation_1a148e178be837b1cd87189367869e717e" prot="public" virt="non-virtual"><scope>CmdCalculator::SimpleCalculation</scope><name>InputExpressionType</name></member>
      <member refid="class_cmd_calculator_1_1_simple_calculation_1aeabdda5de82c34c4d260977d91a20d5e" prot="private" virt="non-virtual"><scope>CmdCalculator::SimpleCalculation</scope><name>m_configuration</name></member>
      <member refid="class_cmd_calculator_1_1_simple_calculation_1a2dd10204077a516dc215f8f724d3194b" prot="private" virt="non-virtual"><scope>CmdCalculator::SimpleCalculation</scope><name>m_expressionToStringConverter</name></member>
      <member refid="class_cmd_calculator_1_1_simple_calculation_1a831c3fce4c27b73bf6b5f44bd767ecda" prot="private" virt="non-virtual"><scope>CmdCalculator::SimpleCalculation</scope><name>m_inputExpression</name></member>
      <member refid="class_cmd_calculator_1_1_simple_calculation_1a4533ad84feef07f957219d97b3338e95" prot="private" virt="non-virtual"><scope>CmdCalculator::SimpleCalculation</scope><name>m_mathAstToExpressionConverter</name></member>
      <member refid="class_cmd_calculator_1_1_simple_calculation_1abfa843c0c807ff54c56e2caa0e356c74" prot="private" virt="non-virtual"><scope>CmdCalculator::SimpleCalculation</scope><name>m_stringToMathAstConverter</name></member>
      <member refid="class_cmd_calculator_1_1_simple_calculation_1af22e405837f605b73c67dac038e1b8fa" prot="public" virt="non-virtual"><scope>CmdCalculator::SimpleCalculation</scope><name>MathAstToExpressionConverterType</name></member>
      <member refid="class_cmd_calculator_1_1_simple_calculation_1a75933a780497527784ee001b0a375515" prot="public" virt="non-virtual"><scope>CmdCalculator::SimpleCalculation</scope><name>OutputExpressionType</name></member>
      <member refid="class_cmd_calculator_1_1_simple_calculation_1a17f2a7de86aa27d4428249864bb3cba0" prot="public" virt="non-virtual"><scope>CmdCalculator::SimpleCalculation</scope><name>SimpleCalculation</name></member>
      <member refid="class_cmd_calculator_1_1_simple_calculation_1a33e8f8c83cd14af4379b61afce4f35f9" prot="public" virt="non-virtual"><scope>CmdCalculator::SimpleCalculation</scope><name>StringToMathAstConverterType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
