<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_cmd_calculator_1_1_math_ast_1_1_dynamic_sign_operation_node" kind="class" language="C++" prot="public">
    <compoundname>CmdCalculator::MathAst::DynamicSignOperationNode</compoundname>
    <basecompoundref refid="class_cmd_calculator_1_1_math_ast_1_1_dynamic_unary_operation_node" prot="public" virt="non-virtual">CmdCalculator::MathAst::DynamicUnaryOperationNode&lt; StringT &gt;</basecompoundref>
    <includes refid="_dynamic_sign_operation_node_8h" local="no">DynamicSignOperationNode.h</includes>
    <templateparamlist>
      <param>
        <type>String</type>
        <declname>StringT</declname>
        <defname>StringT</defname>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_cmd_calculator_1_1_math_ast_1_1_dynamic_sign_operation_node_1a1f563e55b7d2de3ceb6cce29702ff34f" prot="public" static="no">
        <type><ref refid="class_cmd_calculator_1_1_math_ast_1_1_dynamic_operand_node" kindref="compound">DynamicOperandNode</ref>&lt; <ref refid="class_cmd_calculator_1_1_math_ast_1_1_dynamic_expression_containing_node_with_underlying_collection" kindref="compound">StringT</ref> &gt;::StringType</type>
        <definition>using CmdCalculator::MathAst::DynamicSignOperationNode&lt; StringT &gt;::StringType =  DynamicOperandNode&lt;StringT&gt;::StringType</definition>
        <argsstring></argsstring>
        <name>StringType</name>
        <qualifiedname>CmdCalculator::MathAst::DynamicSignOperationNode::StringType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DynamicSignOperationNode.h" line="17" column="1" bodyfile="DynamicSignOperationNode.h" bodystart="17" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_cmd_calculator_1_1_math_ast_1_1_dynamic_sign_operation_node_1a727485c96142ce048f2ce02d526d18f9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_cmd_calculator_1_1_math_ast_1_1_dynamic_expression_containing_node_with_underlying_collection" kindref="compound">bool</ref></type>
        <definition>bool CmdCalculator::MathAst::DynamicSignOperationNode&lt; StringT &gt;::isPositive</definition>
        <argsstring>() const</argsstring>
        <name>isPositive</name>
        <qualifiedname>CmdCalculator::MathAst::DynamicSignOperationNode::isPositive</qualifiedname>
        <briefdescription>
<para>Tests if the sign expression is positive or negative. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the sign expression is positive, false if it&apos;s negative. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DynamicSignOperationNode.h" line="22" column="6" bodyfile="DynamicSignOperationNode.h" bodystart="22" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="class_cmd_calculator_1_1_math_ast_1_1_dynamic_sign_operation_node_1a400ceb903bef7548a92ede6f6028b79e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_cmd_calculator_1_1_math_ast_1_1_dynamic_expression_containing_node_with_underlying_collection" kindref="compound">StringT</ref></type>
        <definition>StringT CmdCalculator::MathAst::DynamicSignOperationNode&lt; StringT &gt;::getInnerTrivia</definition>
        <argsstring>() const override</argsstring>
        <name>getInnerTrivia</name>
        <qualifiedname>CmdCalculator::MathAst::DynamicSignOperationNode::getInnerTrivia</qualifiedname>
        <reimplements refid="class_cmd_calculator_1_1_math_ast_1_1_dynamic_unary_operation_node_1a56a6c97edbd0404a4122422f03278b69">getInnerTrivia</reimplements>
        <briefdescription>
<para>Accessor to the inner trivia of the operation. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The trivia content between the operator and it&apos;s operand. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DynamicSignOperationNode.h" line="28" column="9" bodyfile="DynamicSignOperationNode.h" bodystart="28" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="class_cmd_calculator_1_1_math_ast_1_1_dynamic_sign_operation_node_1a99765bef5c082b5ae02289e748417815" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_cmd_calculator_1_1_math_ast_1_1_dynamic_expression_containing_node_with_underlying_collection" kindref="compound">StringT</ref></type>
        <definition>StringT CmdCalculator::MathAst::DynamicSignOperationNode&lt; StringT &gt;::getLeadingTrivia</definition>
        <argsstring>() const override</argsstring>
        <name>getLeadingTrivia</name>
        <qualifiedname>CmdCalculator::MathAst::DynamicSignOperationNode::getLeadingTrivia</qualifiedname>
        <reimplements refid="class_cmd_calculator_1_1_math_ast_1_1_dynamic_math_ast_node_1ab119030478dfccaaae343daec89c93c2">getLeadingTrivia</reimplements>
        <briefdescription>
<para>Accessor to the AST node&apos;s leading trivia. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Trivial content at the beginning of the string contents of the node. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DynamicSignOperationNode.h" line="34" column="9" bodyfile="DynamicSignOperationNode.h" bodystart="34" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="class_cmd_calculator_1_1_math_ast_1_1_dynamic_sign_operation_node_1a9260c6574b056a0a739cb4c46a720614" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_cmd_calculator_1_1_math_ast_1_1_dynamic_expression_containing_node_with_underlying_collection" kindref="compound">StringT</ref></type>
        <definition>StringT CmdCalculator::MathAst::DynamicSignOperationNode&lt; StringT &gt;::getTrailingTrivia</definition>
        <argsstring>() const override</argsstring>
        <name>getTrailingTrivia</name>
        <qualifiedname>CmdCalculator::MathAst::DynamicSignOperationNode::getTrailingTrivia</qualifiedname>
        <reimplements refid="class_cmd_calculator_1_1_math_ast_1_1_dynamic_math_ast_node_1a5e3b93b8fe74dccdfb351d216607d01d">getTrailingTrivia</reimplements>
        <briefdescription>
<para>Accessor to the AST node&apos;s trailing trivia. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Trivial content at the end of the string contents of the node. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DynamicSignOperationNode.h" line="40" column="9" bodyfile="DynamicSignOperationNode.h" bodystart="40" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="class_cmd_calculator_1_1_math_ast_1_1_dynamic_sign_operation_node_1a83556f553d6e02f9ca191cc76f52d638" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_cmd_calculator_1_1_math_ast_1_1_dynamic_expression_containing_node_with_underlying_collection" kindref="compound">StringT</ref></type>
        <definition>StringT CmdCalculator::MathAst::DynamicSignOperationNode&lt; StringT &gt;::getStringRepresentation</definition>
        <argsstring>() const override</argsstring>
        <name>getStringRepresentation</name>
        <qualifiedname>CmdCalculator::MathAst::DynamicSignOperationNode::getStringRepresentation</qualifiedname>
        <reimplements refid="class_cmd_calculator_1_1_math_ast_1_1_dynamic_math_ast_node_1a06c7437a7e811c1db2821bbd73a3e97a">getStringRepresentation</reimplements>
        <briefdescription>
<para>Accessor to the AST node&apos;s string representation. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>All non-trivial string contents of the node. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DynamicSignOperationNode.h" line="46" column="9" bodyfile="DynamicSignOperationNode.h" bodystart="46" bodyend="49"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>A sign operation. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>StringT</parametername>
</parameternamelist>
<parameterdescription>
<para>The string type to use. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>CmdCalculator::MathAst::DynamicExpressionPartNode&lt; StringT &gt;</label>
        <link refid="class_cmd_calculator_1_1_math_ast_1_1_dynamic_expression_part_node"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>CmdCalculator::MathAst::DynamicMathAstNode&lt; StringT &gt;</label>
        <link refid="class_cmd_calculator_1_1_math_ast_1_1_dynamic_math_ast_node"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>CmdCalculator::MathAst::DynamicOperandNode&lt; StringT &gt;</label>
        <link refid="class_cmd_calculator_1_1_math_ast_1_1_dynamic_operand_node"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>CmdCalculator::MathAst::DynamicSignOperationNode&lt; StringT &gt;</label>
        <link refid="class_cmd_calculator_1_1_math_ast_1_1_dynamic_sign_operation_node"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>CmdCalculator::MathAst::DynamicUnaryOperationNode&lt; StringT &gt;</label>
        <link refid="class_cmd_calculator_1_1_math_ast_1_1_dynamic_unary_operation_node"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>CmdCalculator::MathAst::ExpressionPartNode_IntendedSatisfaction</label>
        <link refid="struct_cmd_calculator_1_1_math_ast_1_1_expression_part_node___intended_satisfaction"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>CmdCalculator::MathAst::MathAstNode_IntendedSatisfaction</label>
        <link refid="struct_cmd_calculator_1_1_math_ast_1_1_math_ast_node___intended_satisfaction"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>CmdCalculator::MathAst::DynamicExpressionPartNode&lt; StringT &gt;</label>
        <link refid="class_cmd_calculator_1_1_math_ast_1_1_dynamic_expression_part_node"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>CmdCalculator::MathAst::DynamicMathAstNode&lt; StringT &gt;</label>
        <link refid="class_cmd_calculator_1_1_math_ast_1_1_dynamic_math_ast_node"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>CmdCalculator::MathAst::DynamicOperandNode&lt; StringT &gt;</label>
        <link refid="class_cmd_calculator_1_1_math_ast_1_1_dynamic_operand_node"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>CmdCalculator::MathAst::DynamicSignOperationNode&lt; StringT &gt;</label>
        <link refid="class_cmd_calculator_1_1_math_ast_1_1_dynamic_sign_operation_node"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>CmdCalculator::MathAst::DynamicUnaryOperationNode&lt; StringT &gt;</label>
        <link refid="class_cmd_calculator_1_1_math_ast_1_1_dynamic_unary_operation_node"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>CmdCalculator::MathAst::ExpressionPartNode_IntendedSatisfaction</label>
        <link refid="struct_cmd_calculator_1_1_math_ast_1_1_expression_part_node___intended_satisfaction"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>CmdCalculator::MathAst::MathAstNode_IntendedSatisfaction</label>
        <link refid="struct_cmd_calculator_1_1_math_ast_1_1_math_ast_node___intended_satisfaction"/>
      </node>
    </collaborationgraph>
    <location file="DynamicSignOperationNode.h" line="12" column="1" bodyfile="DynamicSignOperationNode.h" bodystart="14" bodyend="50"/>
    <listofallmembers>
      <member refid="class_cmd_calculator_1_1_math_ast_1_1_dynamic_sign_operation_node_1a400ceb903bef7548a92ede6f6028b79e" prot="public" virt="virtual"><scope>CmdCalculator::MathAst::DynamicSignOperationNode</scope><name>getInnerTrivia</name></member>
      <member refid="class_cmd_calculator_1_1_math_ast_1_1_dynamic_sign_operation_node_1a99765bef5c082b5ae02289e748417815" prot="public" virt="virtual"><scope>CmdCalculator::MathAst::DynamicSignOperationNode</scope><name>getLeadingTrivia</name></member>
      <member refid="class_cmd_calculator_1_1_math_ast_1_1_dynamic_unary_operation_node_1a1fa11ddeaf3082fe935e7a07bb0aa99f" prot="public" virt="pure-virtual"><scope>CmdCalculator::MathAst::DynamicSignOperationNode</scope><name>getOperand</name></member>
      <member refid="class_cmd_calculator_1_1_math_ast_1_1_dynamic_sign_operation_node_1a83556f553d6e02f9ca191cc76f52d638" prot="public" virt="virtual"><scope>CmdCalculator::MathAst::DynamicSignOperationNode</scope><name>getStringRepresentation</name></member>
      <member refid="class_cmd_calculator_1_1_math_ast_1_1_dynamic_sign_operation_node_1a9260c6574b056a0a739cb4c46a720614" prot="public" virt="virtual"><scope>CmdCalculator::MathAst::DynamicSignOperationNode</scope><name>getTrailingTrivia</name></member>
      <member refid="class_cmd_calculator_1_1_math_ast_1_1_dynamic_sign_operation_node_1a727485c96142ce048f2ce02d526d18f9" prot="public" virt="non-virtual"><scope>CmdCalculator::MathAst::DynamicSignOperationNode</scope><name>isPositive</name></member>
      <member refid="class_cmd_calculator_1_1_math_ast_1_1_dynamic_sign_operation_node_1a1f563e55b7d2de3ceb6cce29702ff34f" prot="public" virt="non-virtual"><scope>CmdCalculator::MathAst::DynamicSignOperationNode</scope><name>StringType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
