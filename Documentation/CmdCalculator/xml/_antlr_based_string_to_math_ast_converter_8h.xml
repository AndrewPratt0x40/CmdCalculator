<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="_antlr_based_string_to_math_ast_converter_8h" kind="file" language="C++">
    <compoundname>AntlrBasedStringToMathAstConverter.h</compoundname>
    <includes local="no">concepts</includes>
    <includes local="no">ranges</includes>
    <includes local="no">vector</includes>
    <includes local="no">memory</includes>
    <includes refid="_string_to_math_ast_converter_8h" local="yes">StringToMathAstConverter.h</includes>
    <includes refid="strings_8h" local="yes">strings.h</includes>
    <includes refid="_dynamic_expression_node_8h" local="yes">DynamicExpressionNode.h</includes>
    <includes refid="_dynamic_expression_part_node_8h" local="yes">DynamicExpressionPartNode.h</includes>
    <includes refid="_not_implemented_exception_8h" local="yes">NotImplementedException.h</includes>
    <includedby refid="_antlr_based_string_to_math_ast_converter_8cpp" local="yes">AntlrBasedStringToMathAstConverter.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>AntlrBasedStringToMathAstConverter.h</label>
        <link refid="_antlr_based_string_to_math_ast_converter_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>DynamicExpressionNode.h</label>
        <link refid="_dynamic_expression_node_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>DynamicExpressionPartNode.h</label>
        <link refid="_dynamic_expression_part_node_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>DynamicMathAstNode.h</label>
        <link refid="_dynamic_math_ast_node_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>ExpressionNode.h</label>
        <link refid="_expression_node_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>ExpressionPartNode.h</label>
        <link refid="_expression_part_node_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>MathAstNode.h</label>
        <link refid="_math_ast_node_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>NotImplementedException.h</label>
        <link refid="_not_implemented_exception_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>StringToMathAstConverter.h</label>
        <link refid="_string_to_math_ast_converter_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>strings.h</label>
        <link refid="strings_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>concepts</label>
      </node>
      <node id="16">
        <label>exception</label>
      </node>
      <node id="5">
        <label>memory</label>
      </node>
      <node id="3">
        <label>ranges</label>
      </node>
      <node id="8">
        <label>string</label>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>AntlrBasedStringToMathAstConverter.cpp</label>
        <link refid="_antlr_based_string_to_math_ast_converter_8cpp"/>
      </node>
      <node id="1">
        <label>AntlrBasedStringToMathAstConverter.h</label>
        <link refid="_antlr_based_string_to_math_ast_converter_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_cmd_calculator_1_1_antlr_based_string_to_math_ast_converter" prot="public">CmdCalculator::AntlrBasedStringToMathAstConverter</innerclass>
    <innernamespace refid="namespace_cmd_calculator">CmdCalculator</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include&lt;concepts&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include&lt;ranges&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_string_to_math_ast_converter_8h" kindref="compound">StringToMathAstConverter.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="strings_8h" kindref="compound">strings.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_dynamic_expression_node_8h" kindref="compound">DynamicExpressionNode.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_dynamic_expression_part_node_8h" kindref="compound">DynamicExpressionPartNode.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_not_implemented_exception_8h" kindref="compound">NotImplementedException.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&quot;../Antlr4CppRuntime/src/antlr4-runtime.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&quot;antlr_output/CmdCalculatorExpressionLexer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="namespace_cmd_calculator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_cmd_calculator" kindref="compound">CmdCalculator</ref></highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;StringView<sp/>StringViewT&gt;</highlight></codeline>
<codeline lineno="21" refid="class_cmd_calculator_1_1_antlr_based_string_to_math_ast_converter" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_cmd_calculator_1_1_antlr_based_string_to_math_ast_converter" kindref="compound">AntlrBasedStringToMathAstConverter</ref><sp/>:</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_cmd_calculator_1_1_string_to_math_ast_converter___intended_satisfaction" kindref="compound">StringToMathAstConverter_IntendedSatisfaction</ref></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="25" refid="class_cmd_calculator_1_1_antlr_based_string_to_math_ast_converter_1aa3b92143931584cd7e14cb0632882f59" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="class_cmd_calculator_1_1_antlr_based_string_to_math_ast_converter_1aa3b92143931584cd7e14cb0632882f59" kindref="member">StringType</ref><sp/>=<sp/>std::basic_string&lt;typename<sp/>StringViewT::value_type&gt;;</highlight></codeline>
<codeline lineno="26" refid="class_cmd_calculator_1_1_antlr_based_string_to_math_ast_converter_1a7ef9eff7a35e35632bfe9b4794982015" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="class_cmd_calculator_1_1_antlr_based_string_to_math_ast_converter_1a7ef9eff7a35e35632bfe9b4794982015" kindref="member">StringViewType</ref><sp/>=<sp/>StringViewT;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">UnderlyingPartsType<sp/>=<sp/>std::vector&lt;std::unique_ptr&lt;MathAst::DynamicExpressionPartNode&lt;StringType&gt;&gt;&gt;;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_cmd_calculator_1_1_math_ast_1_1_dynamic_expression_containing_node_with_underlying_collection" kindref="compound">MathAst::DynamicExpressionNode&lt;StringType, UnderlyingPartsType&gt;</ref><sp/>getStringAsMathAst(StringViewT<sp/>source)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="35"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_cmd_calculator_1_1_not_implemented_exception" kindref="compound">NotImplementedException</ref>{};</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="AntlrBasedStringToMathAstConverter.h"/>
  </compounddef>
</doxygen>
